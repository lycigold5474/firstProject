# Encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# h2 DB, Allow web console
# http://localhost:8080/h2-console
spring.h2.console.enabled=true

#data.sql 적용 스프링부트 2.5이상 필수
spring.jpa.defer-datasource-initialization=true

# thymeleaf
spring.thymeleaf.cache=false

# JPA 로깅 설정
## 디버그 레벨로 쿼리 출력
logging.level.org.hibernate.SQL=DEBUG
## 이쁘게 보여주기  쿼리 로그 포맷 (정렬)
spring.jpa.properties.hibernate.format_sql=true
## 쿼리 로그 출력
spring.jpa.properties.hibernate.show_sql=true
## 파라미터 보여주기
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
## 고정 url 설정
# 메모리모드
#spring.datasource.url=jdbc:h2:mem:testdb
# 파일로 설정
#spring.datasource.url=jdbc:h2:./src/main/resources/h2db;AUTO_SERVER=true
spring.datasource.url=jdbc:h2:./src/main/resources/h2db
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
# always: 애플리케이션 시작 시 항상 초기화 스크립트 실행
# embedded: 내장 데이터베이스(H2, HSQL 등)에서만 초기화 스크립트 실행
# never: 초기화 스크립트 실행 안 함
# on-demand: 데이터베이스 사용 시점에 초기화 스크립트 실행
# 파일모드로 할때는 처음만 always로 해서 입력한다음에 never로 변경
spring.sql.init.mode=never
#db초기화 전략 create : 기존꺼 drop하고 생성 DB 초기화 전략 (none, create, create-drop, update, validate)
#출처: https://congsong.tistory.com/46 [Let's develop:티스토리]
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.open-in-view=true



