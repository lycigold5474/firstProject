{{>layouts/header}}

<div id="formData" class="container">
    <h5>폼데이터로 전송 (form태그사용 x)</h5>
    <div class="mb-3">
        <label class="form-label">제목</label>
        <input type="text" class="form-control" name="title">
    </div>
    <div class="mb-3">
        <label class="form-label">내용</label>
        <textarea class="form-control" rows="3" name="content"></textarea>
    </div>
    <button type="button" class="btn btn-primary" onclick="submitForm()">form데이터 전송</button>
    <button type="button" class="btn btn-primary" onclick="submitJson()">json데이터 전송</button>
    <button type="button" class="btn btn-primary" onclick="saveJson()">json데이터 저장</button>
    <button type="button" class="btn btn-primary" onclick="saveJson1()">json데이터 저장 및 이동</button>
    <a href="/articles">Back</a>
</div>

<script>
    function submitForm() {
        const result = fetchFormData('/articles/create1', createFormData());
        console.log('result', result);
    }



    function submitJson() {
        const result = fetchJsonData('/articles/create2', createJsonData());
        console.log('result', result);
    }

    async function saveJson() {
        const result = await fetchJsonData('/articles/save', createJsonData());
        console.log('result', result);
        //리다이렉트가 안되서 받은값으로 이동 구현
        if(result.id){
            window.location.href = '/articles/'+result.id;
        }

    }

    function saveJson1() {
      // 개발메모 : 서버에서 redirect했으나 실제 브라우저에서 이동하지 않음
        fetchJsonDataNoReturn('/articles/save1', createJsonData());
    }

    // function createJsonData() {
    //     var jsonData = {};
    //     var formElements = document.getElementById('formData').querySelectorAll('input, textarea');
    //
    //     formElements.forEach(function(element) {
    //         jsonData[element.name] = element.value;
    //     });
    //
    //     return jsonData;
    // }




    async function fetchJsonDataNoReturn(url, data, method = 'POST') {
        try {
            const response = await fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: data ? JSON.stringify(data) : null,
                redirect: 'follow', // 리다이렉션을 따르도록 설정 (기본값)
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            // 성공적인 응답이면 반환할 값이 없으므로 null 또는 undefined를 반환
            // return null;
        } catch (error) {
            console.error('There was a problem with the fetch operation:', error);
            throw error;
        }
    }

</script>

{{>layouts/footer}}